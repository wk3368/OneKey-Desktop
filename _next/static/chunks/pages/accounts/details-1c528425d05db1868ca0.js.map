{"version":3,"sources":["webpack://_N_E//home/runner/work/OneKey-Desktop/OneKey-Desktop/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?917c","webpack://_N_E/../suite/src/views/wallet/details/index.tsx","webpack://_N_E/../suite/src/views/wallet/details/Container.tsx","webpack://_N_E/./pages/accounts/details/index.tsx"],"names":["window","__NEXT_P","push","AccountTypeLabel","styled","div","StyledCard","Card","CARD_PADDING_SIZE","StyledRow","Row","Details","selectedAccount","openModal","device","isLocked","useDevice","status","title","account","disabled","authConfirm","accountTypeName","getAccountTypeIntl","accountType","bip43","getBip43Shortcut","path","accountTypeDesc","accountTypeShortcut","accountTypeUrl","WIKI_P2PHK_URL","WIKI_BECH32_URL","WIKI_P2SH_URL","id","largePadding","description","learnMore","size","WIKI_XPUB_URL","variant","data-test","onClick","type","xpub","descriptor","accountPath","accountIndex","index","symbol","accountLabel","metadata","isLoading","isDisabled","connect","state","wallet","dispatch","bindActionCreators","modalActions","DetailsIndex","Account"],"mappings":"6FACOA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,oBACA,WACE,OAAO,EAAQ,Y,sOCczB,MAAMC,EAAmBC,UAAOC,IAAV,qDAAGD,CAAH,iHAWhBE,EAAaF,kBAAOG,KAAV,+CAAGH,CAAH,8DAEGI,IACGA,KAGhBC,EAAYL,kBAAOM,KAAV,8CAAGN,CAAH,oBAgFAO,MA5EC,EAAGC,kBAAiBC,gBAChC,MAAM,OAAEC,EAAF,SAAUC,GAAaC,cAC7B,IAAKF,GAAqC,WAA3BF,EAAgBK,OAC3B,OAAO,EAAC,IAAD,CAAcC,MAAM,4BAA4BC,QAASP,IAGpE,MAAM,QAAEO,GAAYP,EACdQ,IAAaN,EAAOO,YAEpBC,EAAkBC,YAAmBJ,EAAQK,aAC7CC,EAAQC,YAAiBP,EAAQQ,MACvC,IAAIC,EAAmD,gCACnDC,EAAuD,wBACvDC,EAAiBC,iBAYrB,MAXc,WAAVN,IACAG,EAAkB,iCAClBC,EAAsB,yBACtBC,EAAiBE,mBAEP,SAAVP,IACAG,EAAkB,+BAClBC,EAAsB,uBACtBC,EAAiBG,iBAIjB,EAAC,IAAD,CAAcf,MAAM,4BAA4BC,QAASP,GACrD,EAACN,EAAD,CAAYY,MAAO,EAAC,IAAD,CAAagB,GAAG,8BAAgCC,cAAY,GAC3E,EAAC1B,EAAD,KACI,EAAC,IAAD,CACIS,MAAO,EAAC,IAAD,CAAagB,GAAG,mCACvBE,YAAa,EAAC,IAAD,CAAaF,GAAIN,IAC9BS,UAAWP,IAEf,EAAC3B,EAAD,KACI,EAAC,IAAD,CAAGmC,KAAK,SACJ,EAAC,IAAD,CAAaJ,GAAIZ,KAErB,EAAC,IAAD,CAAGgB,KAAK,QACJ,EAAC,IAAD,CAAaJ,GAAIL,OAI7B,EAAC,IAAD,KACI,EAAC,IAAD,CACIX,MAAO,EAAC,IAAD,CAAagB,GAAG,mCACvBE,YAAa,EAAC,IAAD,CAAaF,GAAG,4BAC7BG,UAAWE,kBAEf,EAAC,IAAD,KACI,EAAC,IAAD,CACIC,QAAQ,YACRC,YAAU,oCACVC,QAAS,IACL7B,EAAU,CACN8B,KAAM,OACNC,KAAMzB,EAAQ0B,WACdC,YAAa3B,EAAQQ,KACrBoB,aAAc5B,EAAQ6B,MACtBxB,YAAaL,EAAQK,YACrByB,OAAQ9B,EAAQ8B,OAChBC,aAAc/B,EAAQgC,SAASD,eAGvCE,UAAWrC,MAAeK,EAC1BiC,WAAYjC,GAEZ,EAAC,IAAD,CAAac,GAAG,yCCrF7BoB,mBAdUC,IAAD,CACpB3C,gBAAiB2C,EAAMC,OAAO5C,oBAGN6C,GACxBC,YACI,CACI7C,UAAW8C,aAEfF,IAKOH,CAA6CM,GCnB7CC,c","file":"static/chunks/pages/accounts/details-1c528425d05db1868ca0.js","sourcesContent":["\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/accounts/details\",\n        function () {\n          return require(\"private-next-pages/accounts/details/index.tsx\");\n        }\n      ]);\n    ","import React from 'react';\nimport styled from 'styled-components';\nimport { P } from '@trezor/components';\nimport { WalletLayout } from '@wallet-components';\nimport { useDevice } from '@suite-hooks';\nimport { Props } from './Container';\nimport { Translation, Card } from '@suite-components';\nimport { ExtendedMessageDescriptor } from '@suite-types';\nimport { getAccountTypeIntl, getBip43Shortcut } from '@wallet-utils/accountUtils';\nimport { ActionColumn, Row, TextColumn, ActionButton } from '@suite-components/Settings';\nimport {\n    WIKI_XPUB_URL,\n    WIKI_BECH32_URL,\n    WIKI_P2SH_URL,\n    WIKI_P2PHK_URL,\n} from '@suite-constants/urls';\nimport { CARD_PADDING_SIZE } from '@suite-constants/layout';\n\nconst AccountTypeLabel = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    line-height: 20px;\n\n    div:first-child {\n        padding-right: 8px;\n    }\n`;\n\nconst StyledCard = styled(Card)`\n    flex-direction: column;\n    padding-top: ${CARD_PADDING_SIZE};\n    padding-bottom: ${CARD_PADDING_SIZE};\n`;\n\nconst StyledRow = styled(Row)`\n    padding-top: 0;\n`;\n\nconst Details = ({ selectedAccount, openModal }: Props) => {\n    const { device, isLocked } = useDevice();\n    if (!device || selectedAccount.status !== 'loaded') {\n        return <WalletLayout title=\"TR_ACCOUNT_DETAILS_HEADER\" account={selectedAccount} />;\n    }\n\n    const { account } = selectedAccount;\n    const disabled = !!device.authConfirm;\n\n    const accountTypeName = getAccountTypeIntl(account.accountType);\n    const bip43 = getBip43Shortcut(account.path);\n    let accountTypeDesc: ExtendedMessageDescriptor['id'] = 'TR_ACCOUNT_DETAILS_TYPE_P2PKH';\n    let accountTypeShortcut: ExtendedMessageDescriptor['id'] = 'TR_ACCOUNT_TYPE_P2PKH';\n    let accountTypeUrl = WIKI_P2PHK_URL;\n    if (bip43 === 'bech32') {\n        accountTypeDesc = 'TR_ACCOUNT_DETAILS_TYPE_BECH32';\n        accountTypeShortcut = 'TR_ACCOUNT_TYPE_BECH32';\n        accountTypeUrl = WIKI_BECH32_URL;\n    }\n    if (bip43 === 'p2sh') {\n        accountTypeDesc = 'TR_ACCOUNT_DETAILS_TYPE_P2SH';\n        accountTypeShortcut = 'TR_ACCOUNT_TYPE_P2SH';\n        accountTypeUrl = WIKI_P2SH_URL;\n    }\n\n    return (\n        <WalletLayout title=\"TR_ACCOUNT_DETAILS_HEADER\" account={selectedAccount}>\n            <StyledCard title={<Translation id=\"TR_ACCOUNT_DETAILS_HEADER\" />} largePadding>\n                <StyledRow>\n                    <TextColumn\n                        title={<Translation id=\"TR_ACCOUNT_DETAILS_TYPE_HEADER\" />}\n                        description={<Translation id={accountTypeDesc} />}\n                        learnMore={accountTypeUrl}\n                    />\n                    <AccountTypeLabel>\n                        <P size=\"small\">\n                            <Translation id={accountTypeName} />\n                        </P>\n                        <P size=\"tiny\">\n                            <Translation id={accountTypeShortcut} />\n                        </P>\n                    </AccountTypeLabel>\n                </StyledRow>\n                <Row>\n                    <TextColumn\n                        title={<Translation id=\"TR_ACCOUNT_DETAILS_XPUB_HEADER\" />}\n                        description={<Translation id=\"TR_ACCOUNT_DETAILS_XPUB\" />}\n                        learnMore={WIKI_XPUB_URL}\n                    />\n                    <ActionColumn>\n                        <ActionButton\n                            variant=\"secondary\"\n                            data-test=\"@wallets/details/show-xpub-button\"\n                            onClick={() =>\n                                openModal({\n                                    type: 'xpub',\n                                    xpub: account.descriptor,\n                                    accountPath: account.path,\n                                    accountIndex: account.index,\n                                    accountType: account.accountType,\n                                    symbol: account.symbol,\n                                    accountLabel: account.metadata.accountLabel,\n                                })\n                            }\n                            isLoading={isLocked() && !disabled}\n                            isDisabled={disabled}\n                        >\n                            <Translation id=\"TR_ACCOUNT_DETAILS_XPUB_BUTTON\" />\n                        </ActionButton>\n                    </ActionColumn>\n                </Row>\n            </StyledCard>\n        </WalletLayout>\n    );\n};\n\nexport default Details;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as modalActions from '@suite-actions/modalActions';\n\nimport { AppState, Dispatch } from '@suite-types';\nimport DetailsIndex from './index';\n\nconst mapStateToProps = (state: AppState) => ({\n    selectedAccount: state.wallet.selectedAccount,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n    bindActionCreators(\n        {\n            openModal: modalActions.openModal,\n        },\n        dispatch,\n    );\n\nexport type Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailsIndex);\n","import Account from '@wallet-views/details/Container';\n\nexport default Account;\n"],"sourceRoot":""}