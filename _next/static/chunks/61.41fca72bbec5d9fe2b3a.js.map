{"version":3,"sources":["webpack://_N_E//home/runner/work/OneKey-Desktop/OneKey-Desktop/node_modules/zxcvbn/lib/main.js","webpack://_N_E//home/runner/work/OneKey-Desktop/OneKey-Desktop/node_modules/zxcvbn/lib/scoring.js","webpack://_N_E//home/runner/work/OneKey-Desktop/OneKey-Desktop/node_modules/zxcvbn/lib/time_estimates.js","webpack://_N_E/../suite/src/components/suite/PasswordStrengthIndicator/index.tsx","webpack://_N_E//home/runner/work/OneKey-Desktop/OneKey-Desktop/node_modules/zxcvbn/lib/matching.js","webpack://_N_E//home/runner/work/OneKey-Desktop/OneKey-Desktop/node_modules/zxcvbn/lib/adjacency_graphs.js","webpack://_N_E//home/runner/work/OneKey-Desktop/OneKey-Desktop/node_modules/zxcvbn/lib/feedback.js"],"names":["feedback","matching","scoring","time","time_estimates","zxcvbn","Date","getTime","password","user_inputs","arg","attack_times","i","len","matches","prop","ref","result","sanitized_inputs","start","val","length","push","toString","toLowerCase","set_user_input_dictionary","omnimatch","most_guessable_match_sequence","calc_time","estimate_attack_times","guesses","get_feedback","score","sequence","module","exports","adjacency_graphs","calc_average_degree","k","graph","average","key","n","neighbors","o","results","nCk","d","r","log10","Math","log","log2","factorial","f","_exclude_additive","bruteforce_update","l","len1","len2","m","make_bruteforce_match","matches_by_j","optimal","optimal_l","optimal_match_sequence","q","ref1","u","unwind","update","w","_this","j","sort","m1","m2","pi","g","this","competing_g","competing_l","estimate_guesses","pow","last_m","results1","parseInt","pattern","token","slice","candidate_g","candidate_l","Infinity","unshift","guesses_log10","match","min_guesses","bruteforce","bruteforce_guesses","dictionary","dictionary_guesses","spatial","spatial_guesses","repeat","repeat_guesses","sequence_guesses","regex","regex_guesses","date","date_guesses","call","max","Number","POSITIVE_INFINITY","MAX_VALUE","MIN_SUBMATCH_GUESSES_SINGLE_CHAR","MIN_SUBMATCH_GUESSES_MULTI_CHAR","base_guesses","repeat_count","first_chr","charAt","ascending","MIN_YEAR_SPACE","REFERENCE_YEAR","getFullYear","char_class_bases","year_space","alpha_lower","alpha_upper","alpha","alphanumeric","digits","symbols","regex_name","abs","regex_match","year","separator","KEYBOARD_AVERAGE_DEGREE","qwerty","KEYPAD_AVERAGE_DEGREE","keypad","KEYBOARD_STARTING_POSITIONS","KEYPAD_STARTING_POSITIONS","L","S","U","ref2","ref3","s","shifted_variations","t","turns","min","shifted_count","reversed_variations","rank","uppercase_variations","l33t_variations","reversed","START_UPPER","END_UPPER","ALL_UPPER","ALL_LOWER","chr","variations","word","split","chrs","possibilities","subbed","unsubbed","l33t","sub","crack_times_display","crack_times_seconds","scenario","seconds","online_throttling_100_per_hour","online_no_throttling_10_per_second","offline_slow_hashing_1e4_per_second","offline_fast_hashing_1e10_per_second","display_time","guesses_to_score","base","day","display_num","display_str","hour","month","minute","round","Wrapper","styled","div","props","width","Line","color","isFilled","getColor","colors","RED","YELLOW","GREEN","PasswordStrengthIndicator","passwordInfo","Array","map","_x","DATE_SPLITS","GRAPHS","L33T_TABLE","RANKED_DICTIONARIES","REGEXEN","build_ranked_dict","frequency_lists","lst","name","ordered_list","dvorak","mac_keypad","a","b","c","e","x","z","recent_year","4","5","6","7","8","empty","obj","extend","lst2","apply","translate","string","chr_map","join","mod","sorted","matcher","matchers","dictionary_match","reverse_dictionary_match","l33t_match","spatial_match","repeat_match","sequence_match","date_match","_ranked_dictionaries","dictionary_name","p","password_lower","ranked_dict","matched_word","reversed_password","reverse","relevant_l33t_subtable","table","letter","password_chars","relevant_subs","subs","subtable","enumerate_l33t_subs","dedup","helper","keys","l33t_chr","sub_dict","sub_dicts","assoc","deduped","label","members","v","dup_l33t_index","first_key","next_subs","rest_keys","sub_alternative","sub_extension","concat","splice","_l33t_table","match_sub","subbed_chr","subbed_password","indexOf","sub_display","filter","_graphs","graph_name","spatial_match_helper","SHIFTED_RX","adj","adjacents","cur_char","cur_direction","found","found_direction","last_direction","exec","base_analysis","base_matches","base_token","greedy","greedy_match","lastIndex","lazy","lazy_anchored","lazy_match","index","MAX_DELTA","delta","last_delta","sequence_name","sequence_space","test","charCodeAt","_regexen","rx_match","best_candidate","candidate","candidates","distance","dmy","maybe_date_no_separator","maybe_date_with_separator","metric","min_distance","ref4","ref5","ref6","ref7","ref8","ref9","map_ints_to_dmy","is_submatch","len3","other_match","ints","dm","int","over_12","over_31","possible_year_splits","rest","under_1","y","map_ints_to_dm","two_to_four_digit_year","\"","default_feedback","warning","suggestions","extra_feedback","longest_match","get_match_feedback","is_sole_match","get_dictionary_match_feedback","toUpperCase"],"mappings":"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,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,MAAO,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MACrC,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,OACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,OACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAEtCzI,OAAQ,CACN,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MACrCyI,IAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MACrC,IAAK,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MACrC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OACpC,EAAK,CAAC,KAAM,MAAO,KAAM,KAAM,KAAM,MACrC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,MAAO,KAAM,KAAM,KAAM,MACrC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM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","file":"static/chunks/61.41fca72bbec5d9fe2b3a.js","sourcesContent":["// Generated by CoffeeScript 1.10.0\nvar feedback, matching, scoring, time, time_estimates, zxcvbn;\n\nmatching = require('./matching');\n\nscoring = require('./scoring');\n\ntime_estimates = require('./time_estimates');\n\nfeedback = require('./feedback');\n\ntime = function() {\n  return (new Date()).getTime();\n};\n\nzxcvbn = function(password, user_inputs) {\n  var arg, attack_times, i, len, matches, prop, ref, result, sanitized_inputs, start, val;\n  if (user_inputs == null) {\n    user_inputs = [];\n  }\n  start = time();\n  sanitized_inputs = [];\n  for (i = 0, len = user_inputs.length; i < len; i++) {\n    arg = user_inputs[i];\n    if ((ref = typeof arg) === \"string\" || ref === \"number\" || ref === \"boolean\") {\n      sanitized_inputs.push(arg.toString().toLowerCase());\n    }\n  }\n  matching.set_user_input_dictionary(sanitized_inputs);\n  matches = matching.omnimatch(password);\n  result = scoring.most_guessable_match_sequence(password, matches);\n  result.calc_time = time() - start;\n  attack_times = time_estimates.estimate_attack_times(result.guesses);\n  for (prop in attack_times) {\n    val = attack_times[prop];\n    result[prop] = val;\n  }\n  result.feedback = feedback.get_feedback(result.score, result.sequence);\n  return result;\n};\n\nmodule.exports = zxcvbn;\n\n//# sourceMappingURL=main.js.map\n","// Generated by CoffeeScript 1.10.0\nvar BRUTEFORCE_CARDINALITY, MIN_GUESSES_BEFORE_GROWING_SEQUENCE, MIN_SUBMATCH_GUESSES_MULTI_CHAR, MIN_SUBMATCH_GUESSES_SINGLE_CHAR, adjacency_graphs, calc_average_degree, k, scoring, v;\n\nadjacency_graphs = require('./adjacency_graphs');\n\ncalc_average_degree = function(graph) {\n  var average, k, key, n, neighbors, v;\n  average = 0;\n  for (key in graph) {\n    neighbors = graph[key];\n    average += ((function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = neighbors.length; o < len; o++) {\n        n = neighbors[o];\n        if (n) {\n          results.push(n);\n        }\n      }\n      return results;\n    })()).length;\n  }\n  average /= ((function() {\n    var results;\n    results = [];\n    for (k in graph) {\n      v = graph[k];\n      results.push(k);\n    }\n    return results;\n  })()).length;\n  return average;\n};\n\nBRUTEFORCE_CARDINALITY = 10;\n\nMIN_GUESSES_BEFORE_GROWING_SEQUENCE = 10000;\n\nMIN_SUBMATCH_GUESSES_SINGLE_CHAR = 10;\n\nMIN_SUBMATCH_GUESSES_MULTI_CHAR = 50;\n\nscoring = {\n  nCk: function(n, k) {\n    var d, o, r, ref;\n    if (k > n) {\n      return 0;\n    }\n    if (k === 0) {\n      return 1;\n    }\n    r = 1;\n    for (d = o = 1, ref = k; 1 <= ref ? o <= ref : o >= ref; d = 1 <= ref ? ++o : --o) {\n      r *= n;\n      r /= d;\n      n -= 1;\n    }\n    return r;\n  },\n  log10: function(n) {\n    return Math.log(n) / Math.log(10);\n  },\n  log2: function(n) {\n    return Math.log(n) / Math.log(2);\n  },\n  factorial: function(n) {\n    var f, i, o, ref;\n    if (n < 2) {\n      return 1;\n    }\n    f = 1;\n    for (i = o = 2, ref = n; 2 <= ref ? o <= ref : o >= ref; i = 2 <= ref ? ++o : --o) {\n      f *= i;\n    }\n    return f;\n  },\n  most_guessable_match_sequence: function(password, matches, _exclude_additive) {\n    var _, bruteforce_update, guesses, k, l, len, len1, len2, lst, m, make_bruteforce_match, matches_by_j, n, o, optimal, optimal_l, optimal_match_sequence, q, ref, ref1, u, unwind, update, w;\n    if (_exclude_additive == null) {\n      _exclude_additive = false;\n    }\n    n = password.length;\n    matches_by_j = (function() {\n      var o, ref, results;\n      results = [];\n      for (_ = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; _ = 0 <= ref ? ++o : --o) {\n        results.push([]);\n      }\n      return results;\n    })();\n    for (o = 0, len = matches.length; o < len; o++) {\n      m = matches[o];\n      matches_by_j[m.j].push(m);\n    }\n    for (q = 0, len1 = matches_by_j.length; q < len1; q++) {\n      lst = matches_by_j[q];\n      lst.sort(function(m1, m2) {\n        return m1.i - m2.i;\n      });\n    }\n    optimal = {\n      m: (function() {\n        var ref, results, u;\n        results = [];\n        for (_ = u = 0, ref = n; 0 <= ref ? u < ref : u > ref; _ = 0 <= ref ? ++u : --u) {\n          results.push({});\n        }\n        return results;\n      })(),\n      pi: (function() {\n        var ref, results, u;\n        results = [];\n        for (_ = u = 0, ref = n; 0 <= ref ? u < ref : u > ref; _ = 0 <= ref ? ++u : --u) {\n          results.push({});\n        }\n        return results;\n      })(),\n      g: (function() {\n        var ref, results, u;\n        results = [];\n        for (_ = u = 0, ref = n; 0 <= ref ? u < ref : u > ref; _ = 0 <= ref ? ++u : --u) {\n          results.push({});\n        }\n        return results;\n      })()\n    };\n    update = (function(_this) {\n      return function(m, l) {\n        var competing_g, competing_l, g, k, pi, ref;\n        k = m.j;\n        pi = _this.estimate_guesses(m, password);\n        if (l > 1) {\n          pi *= optimal.pi[m.i - 1][l - 1];\n        }\n        g = _this.factorial(l) * pi;\n        if (!_exclude_additive) {\n          g += Math.pow(MIN_GUESSES_BEFORE_GROWING_SEQUENCE, l - 1);\n        }\n        ref = optimal.g[k];\n        for (competing_l in ref) {\n          competing_g = ref[competing_l];\n          if (competing_l > l) {\n            continue;\n          }\n          if (competing_g <= g) {\n            return;\n          }\n        }\n        optimal.g[k][l] = g;\n        optimal.m[k][l] = m;\n        return optimal.pi[k][l] = pi;\n      };\n    })(this);\n    bruteforce_update = (function(_this) {\n      return function(k) {\n        var i, l, last_m, ref, results, u;\n        m = make_bruteforce_match(0, k);\n        update(m, 1);\n        results = [];\n        for (i = u = 1, ref = k; 1 <= ref ? u <= ref : u >= ref; i = 1 <= ref ? ++u : --u) {\n          m = make_bruteforce_match(i, k);\n          results.push((function() {\n            var ref1, results1;\n            ref1 = optimal.m[i - 1];\n            results1 = [];\n            for (l in ref1) {\n              last_m = ref1[l];\n              l = parseInt(l);\n              if (last_m.pattern === 'bruteforce') {\n                continue;\n              }\n              results1.push(update(m, l + 1));\n            }\n            return results1;\n          })());\n        }\n        return results;\n      };\n    })(this);\n    make_bruteforce_match = (function(_this) {\n      return function(i, j) {\n        return {\n          pattern: 'bruteforce',\n          token: password.slice(i, +j + 1 || 9e9),\n          i: i,\n          j: j\n        };\n      };\n    })(this);\n    unwind = (function(_this) {\n      return function(n) {\n        var candidate_g, candidate_l, g, k, l, optimal_match_sequence, ref;\n        optimal_match_sequence = [];\n        k = n - 1;\n        l = void 0;\n        g = Infinity;\n        ref = optimal.g[k];\n        for (candidate_l in ref) {\n          candidate_g = ref[candidate_l];\n          if (candidate_g < g) {\n            l = candidate_l;\n            g = candidate_g;\n          }\n        }\n        while (k >= 0) {\n          m = optimal.m[k][l];\n          optimal_match_sequence.unshift(m);\n          k = m.i - 1;\n          l--;\n        }\n        return optimal_match_sequence;\n      };\n    })(this);\n    for (k = u = 0, ref = n; 0 <= ref ? u < ref : u > ref; k = 0 <= ref ? ++u : --u) {\n      ref1 = matches_by_j[k];\n      for (w = 0, len2 = ref1.length; w < len2; w++) {\n        m = ref1[w];\n        if (m.i > 0) {\n          for (l in optimal.m[m.i - 1]) {\n            l = parseInt(l);\n            update(m, l + 1);\n          }\n        } else {\n          update(m, 1);\n        }\n      }\n      bruteforce_update(k);\n    }\n    optimal_match_sequence = unwind(n);\n    optimal_l = optimal_match_sequence.length;\n    if (password.length === 0) {\n      guesses = 1;\n    } else {\n      guesses = optimal.g[n - 1][optimal_l];\n    }\n    return {\n      password: password,\n      guesses: guesses,\n      guesses_log10: this.log10(guesses),\n      sequence: optimal_match_sequence\n    };\n  },\n  estimate_guesses: function(match, password) {\n    var estimation_functions, guesses, min_guesses;\n    if (match.guesses != null) {\n      return match.guesses;\n    }\n    min_guesses = 1;\n    if (match.token.length < password.length) {\n      min_guesses = match.token.length === 1 ? MIN_SUBMATCH_GUESSES_SINGLE_CHAR : MIN_SUBMATCH_GUESSES_MULTI_CHAR;\n    }\n    estimation_functions = {\n      bruteforce: this.bruteforce_guesses,\n      dictionary: this.dictionary_guesses,\n      spatial: this.spatial_guesses,\n      repeat: this.repeat_guesses,\n      sequence: this.sequence_guesses,\n      regex: this.regex_guesses,\n      date: this.date_guesses\n    };\n    guesses = estimation_functions[match.pattern].call(this, match);\n    match.guesses = Math.max(guesses, min_guesses);\n    match.guesses_log10 = this.log10(match.guesses);\n    return match.guesses;\n  },\n  bruteforce_guesses: function(match) {\n    var guesses, min_guesses;\n    guesses = Math.pow(BRUTEFORCE_CARDINALITY, match.token.length);\n    if (guesses === Number.POSITIVE_INFINITY) {\n      guesses = Number.MAX_VALUE;\n    }\n    min_guesses = match.token.length === 1 ? MIN_SUBMATCH_GUESSES_SINGLE_CHAR + 1 : MIN_SUBMATCH_GUESSES_MULTI_CHAR + 1;\n    return Math.max(guesses, min_guesses);\n  },\n  repeat_guesses: function(match) {\n    return match.base_guesses * match.repeat_count;\n  },\n  sequence_guesses: function(match) {\n    var base_guesses, first_chr;\n    first_chr = match.token.charAt(0);\n    if (first_chr === 'a' || first_chr === 'A' || first_chr === 'z' || first_chr === 'Z' || first_chr === '0' || first_chr === '1' || first_chr === '9') {\n      base_guesses = 4;\n    } else {\n      if (first_chr.match(/\\d/)) {\n        base_guesses = 10;\n      } else {\n        base_guesses = 26;\n      }\n    }\n    if (!match.ascending) {\n      base_guesses *= 2;\n    }\n    return base_guesses * match.token.length;\n  },\n  MIN_YEAR_SPACE: 20,\n  REFERENCE_YEAR: new Date().getFullYear(),\n  regex_guesses: function(match) {\n    var char_class_bases, year_space;\n    char_class_bases = {\n      alpha_lower: 26,\n      alpha_upper: 26,\n      alpha: 52,\n      alphanumeric: 62,\n      digits: 10,\n      symbols: 33\n    };\n    if (match.regex_name in char_class_bases) {\n      return Math.pow(char_class_bases[match.regex_name], match.token.length);\n    } else {\n      switch (match.regex_name) {\n        case 'recent_year':\n          year_space = Math.abs(parseInt(match.regex_match[0]) - this.REFERENCE_YEAR);\n          year_space = Math.max(year_space, this.MIN_YEAR_SPACE);\n          return year_space;\n      }\n    }\n  },\n  date_guesses: function(match) {\n    var guesses, year_space;\n    year_space = Math.max(Math.abs(match.year - this.REFERENCE_YEAR), this.MIN_YEAR_SPACE);\n    guesses = year_space * 365;\n    if (match.separator) {\n      guesses *= 4;\n    }\n    return guesses;\n  },\n  KEYBOARD_AVERAGE_DEGREE: calc_average_degree(adjacency_graphs.qwerty),\n  KEYPAD_AVERAGE_DEGREE: calc_average_degree(adjacency_graphs.keypad),\n  KEYBOARD_STARTING_POSITIONS: ((function() {\n    var ref, results;\n    ref = adjacency_graphs.qwerty;\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(k);\n    }\n    return results;\n  })()).length,\n  KEYPAD_STARTING_POSITIONS: ((function() {\n    var ref, results;\n    ref = adjacency_graphs.keypad;\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(k);\n    }\n    return results;\n  })()).length,\n  spatial_guesses: function(match) {\n    var L, S, U, d, guesses, i, j, o, possible_turns, q, ref, ref1, ref2, ref3, s, shifted_variations, t, u;\n    if ((ref = match.graph) === 'qwerty' || ref === 'dvorak') {\n      s = this.KEYBOARD_STARTING_POSITIONS;\n      d = this.KEYBOARD_AVERAGE_DEGREE;\n    } else {\n      s = this.KEYPAD_STARTING_POSITIONS;\n      d = this.KEYPAD_AVERAGE_DEGREE;\n    }\n    guesses = 0;\n    L = match.token.length;\n    t = match.turns;\n    for (i = o = 2, ref1 = L; 2 <= ref1 ? o <= ref1 : o >= ref1; i = 2 <= ref1 ? ++o : --o) {\n      possible_turns = Math.min(t, i - 1);\n      for (j = q = 1, ref2 = possible_turns; 1 <= ref2 ? q <= ref2 : q >= ref2; j = 1 <= ref2 ? ++q : --q) {\n        guesses += this.nCk(i - 1, j - 1) * s * Math.pow(d, j);\n      }\n    }\n    if (match.shifted_count) {\n      S = match.shifted_count;\n      U = match.token.length - match.shifted_count;\n      if (S === 0 || U === 0) {\n        guesses *= 2;\n      } else {\n        shifted_variations = 0;\n        for (i = u = 1, ref3 = Math.min(S, U); 1 <= ref3 ? u <= ref3 : u >= ref3; i = 1 <= ref3 ? ++u : --u) {\n          shifted_variations += this.nCk(S + U, i);\n        }\n        guesses *= shifted_variations;\n      }\n    }\n    return guesses;\n  },\n  dictionary_guesses: function(match) {\n    var reversed_variations;\n    match.base_guesses = match.rank;\n    match.uppercase_variations = this.uppercase_variations(match);\n    match.l33t_variations = this.l33t_variations(match);\n    reversed_variations = match.reversed && 2 || 1;\n    return match.base_guesses * match.uppercase_variations * match.l33t_variations * reversed_variations;\n  },\n  START_UPPER: /^[A-Z][^A-Z]+$/,\n  END_UPPER: /^[^A-Z]+[A-Z]$/,\n  ALL_UPPER: /^[^a-z]+$/,\n  ALL_LOWER: /^[^A-Z]+$/,\n  uppercase_variations: function(match) {\n    var L, U, chr, i, len, o, q, ref, ref1, regex, variations, word;\n    word = match.token;\n    if (word.match(this.ALL_LOWER) || word.toLowerCase() === word) {\n      return 1;\n    }\n    ref = [this.START_UPPER, this.END_UPPER, this.ALL_UPPER];\n    for (o = 0, len = ref.length; o < len; o++) {\n      regex = ref[o];\n      if (word.match(regex)) {\n        return 2;\n      }\n    }\n    U = ((function() {\n      var len1, q, ref1, results;\n      ref1 = word.split('');\n      results = [];\n      for (q = 0, len1 = ref1.length; q < len1; q++) {\n        chr = ref1[q];\n        if (chr.match(/[A-Z]/)) {\n          results.push(chr);\n        }\n      }\n      return results;\n    })()).length;\n    L = ((function() {\n      var len1, q, ref1, results;\n      ref1 = word.split('');\n      results = [];\n      for (q = 0, len1 = ref1.length; q < len1; q++) {\n        chr = ref1[q];\n        if (chr.match(/[a-z]/)) {\n          results.push(chr);\n        }\n      }\n      return results;\n    })()).length;\n    variations = 0;\n    for (i = q = 1, ref1 = Math.min(U, L); 1 <= ref1 ? q <= ref1 : q >= ref1; i = 1 <= ref1 ? ++q : --q) {\n      variations += this.nCk(U + L, i);\n    }\n    return variations;\n  },\n  l33t_variations: function(match) {\n    var S, U, chr, chrs, i, o, p, possibilities, ref, ref1, subbed, unsubbed, variations;\n    if (!match.l33t) {\n      return 1;\n    }\n    variations = 1;\n    ref = match.sub;\n    for (subbed in ref) {\n      unsubbed = ref[subbed];\n      chrs = match.token.toLowerCase().split('');\n      S = ((function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = chrs.length; o < len; o++) {\n          chr = chrs[o];\n          if (chr === subbed) {\n            results.push(chr);\n          }\n        }\n        return results;\n      })()).length;\n      U = ((function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = chrs.length; o < len; o++) {\n          chr = chrs[o];\n          if (chr === unsubbed) {\n            results.push(chr);\n          }\n        }\n        return results;\n      })()).length;\n      if (S === 0 || U === 0) {\n        variations *= 2;\n      } else {\n        p = Math.min(U, S);\n        possibilities = 0;\n        for (i = o = 1, ref1 = p; 1 <= ref1 ? o <= ref1 : o >= ref1; i = 1 <= ref1 ? ++o : --o) {\n          possibilities += this.nCk(U + S, i);\n        }\n        variations *= possibilities;\n      }\n    }\n    return variations;\n  }\n};\n\nmodule.exports = scoring;\n\n//# sourceMappingURL=scoring.js.map\n","// Generated by CoffeeScript 1.10.0\nvar time_estimates;\n\ntime_estimates = {\n  estimate_attack_times: function(guesses) {\n    var crack_times_display, crack_times_seconds, scenario, seconds;\n    crack_times_seconds = {\n      online_throttling_100_per_hour: guesses / (100 / 3600),\n      online_no_throttling_10_per_second: guesses / 10,\n      offline_slow_hashing_1e4_per_second: guesses / 1e4,\n      offline_fast_hashing_1e10_per_second: guesses / 1e10\n    };\n    crack_times_display = {};\n    for (scenario in crack_times_seconds) {\n      seconds = crack_times_seconds[scenario];\n      crack_times_display[scenario] = this.display_time(seconds);\n    }\n    return {\n      crack_times_seconds: crack_times_seconds,\n      crack_times_display: crack_times_display,\n      score: this.guesses_to_score(guesses)\n    };\n  },\n  guesses_to_score: function(guesses) {\n    var DELTA;\n    DELTA = 5;\n    if (guesses < 1e3 + DELTA) {\n      return 0;\n    } else if (guesses < 1e6 + DELTA) {\n      return 1;\n    } else if (guesses < 1e8 + DELTA) {\n      return 2;\n    } else if (guesses < 1e10 + DELTA) {\n      return 3;\n    } else {\n      return 4;\n    }\n  },\n  display_time: function(seconds) {\n    var base, century, day, display_num, display_str, hour, minute, month, ref, year;\n    minute = 60;\n    hour = minute * 60;\n    day = hour * 24;\n    month = day * 31;\n    year = month * 12;\n    century = year * 100;\n    ref = seconds < 1 ? [null, 'less than a second'] : seconds < minute ? (base = Math.round(seconds), [base, base + \" second\"]) : seconds < hour ? (base = Math.round(seconds / minute), [base, base + \" minute\"]) : seconds < day ? (base = Math.round(seconds / hour), [base, base + \" hour\"]) : seconds < month ? (base = Math.round(seconds / day), [base, base + \" day\"]) : seconds < year ? (base = Math.round(seconds / month), [base, base + \" month\"]) : seconds < century ? (base = Math.round(seconds / year), [base, base + \" year\"]) : [null, 'centuries'], display_num = ref[0], display_str = ref[1];\n    if ((display_num != null) && display_num !== 1) {\n      display_str += 's';\n    }\n    return display_str;\n  }\n};\n\nmodule.exports = time_estimates;\n\n//# sourceMappingURL=time_estimates.js.map\n","import React from 'react';\nimport styled from 'styled-components';\nimport zxcvbn from 'zxcvbn';\nimport { colors } from '@trezor/components';\n\ninterface WrapperProps {\n    width?: number;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n    display: flex;\n    margin: 8px 0;\n    flex: 1;\n    height: 5px;\n    overflow: hidden;\n    border-radius: 5px;\n    width: ${props => (props.width ? `${props.width}px` : '100%')};\n`;\n\ninterface LineProps {\n    width?: number;\n    isFilled: boolean;\n}\n\nconst Line = styled.div<LineProps>`\n    background: ${props => (props.color && props.isFilled ? props.color : 'transparent')};\n    display: flex;\n    flex: 1;\n    height: 5px;\n    transition: all 0.5s;\n`;\n\nconst getColor = (score: 0 | 1 | 2 | 3 | 4, password: string) => {\n    if (password === '') return 'transparent';\n    switch (score) {\n        case 0:\n        case 1:\n            return colors.RED;\n        case 2:\n            return colors.YELLOW;\n        case 3:\n        case 4:\n            return colors.GREEN;\n        default:\n            return 'transparent';\n    }\n};\n\ninterface Props {\n    password: string;\n}\n\nconst PasswordStrengthIndicator = ({ password }: Props) => {\n    const passwordInfo = zxcvbn(password);\n    const { score } = passwordInfo;\n    return (\n        <Wrapper>\n            {[...Array(5)].map((_x, i) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <Line key={i} isFilled={i <= score} color={getColor(score, password)} />\n            ))}\n        </Wrapper>\n    );\n};\n\nexport default PasswordStrengthIndicator;\n","// Generated by CoffeeScript 1.10.0\nvar DATE_MAX_YEAR, DATE_MIN_YEAR, DATE_SPLITS, GRAPHS, L33T_TABLE, RANKED_DICTIONARIES, REGEXEN, adjacency_graphs, build_ranked_dict, frequency_lists, lst, matching, name, scoring;\n\nfrequency_lists = require('./frequency_lists');\n\nadjacency_graphs = require('./adjacency_graphs');\n\nscoring = require('./scoring');\n\nbuild_ranked_dict = function(ordered_list) {\n  var i, len1, o, result, word;\n  result = {};\n  i = 1;\n  for (o = 0, len1 = ordered_list.length; o < len1; o++) {\n    word = ordered_list[o];\n    result[word] = i;\n    i += 1;\n  }\n  return result;\n};\n\nRANKED_DICTIONARIES = {};\n\nfor (name in frequency_lists) {\n  lst = frequency_lists[name];\n  RANKED_DICTIONARIES[name] = build_ranked_dict(lst);\n}\n\nGRAPHS = {\n  qwerty: adjacency_graphs.qwerty,\n  dvorak: adjacency_graphs.dvorak,\n  keypad: adjacency_graphs.keypad,\n  mac_keypad: adjacency_graphs.mac_keypad\n};\n\nL33T_TABLE = {\n  a: ['4', '@'],\n  b: ['8'],\n  c: ['(', '{', '[', '<'],\n  e: ['3'],\n  g: ['6', '9'],\n  i: ['1', '!', '|'],\n  l: ['1', '|', '7'],\n  o: ['0'],\n  s: ['$', '5'],\n  t: ['+', '7'],\n  x: ['%'],\n  z: ['2']\n};\n\nREGEXEN = {\n  recent_year: /19\\d\\d|200\\d|201\\d/g\n};\n\nDATE_MAX_YEAR = 2050;\n\nDATE_MIN_YEAR = 1000;\n\nDATE_SPLITS = {\n  4: [[1, 2], [2, 3]],\n  5: [[1, 3], [2, 3]],\n  6: [[1, 2], [2, 4], [4, 5]],\n  7: [[1, 3], [2, 3], [4, 5], [4, 6]],\n  8: [[2, 4], [4, 6]]\n};\n\nmatching = {\n  empty: function(obj) {\n    var k;\n    return ((function() {\n      var results;\n      results = [];\n      for (k in obj) {\n        results.push(k);\n      }\n      return results;\n    })()).length === 0;\n  },\n  extend: function(lst, lst2) {\n    return lst.push.apply(lst, lst2);\n  },\n  translate: function(string, chr_map) {\n    var chr;\n    return ((function() {\n      var len1, o, ref, results;\n      ref = string.split('');\n      results = [];\n      for (o = 0, len1 = ref.length; o < len1; o++) {\n        chr = ref[o];\n        results.push(chr_map[chr] || chr);\n      }\n      return results;\n    })()).join('');\n  },\n  mod: function(n, m) {\n    return ((n % m) + m) % m;\n  },\n  sorted: function(matches) {\n    return matches.sort(function(m1, m2) {\n      return (m1.i - m2.i) || (m1.j - m2.j);\n    });\n  },\n  omnimatch: function(password) {\n    var len1, matcher, matchers, matches, o;\n    matches = [];\n    matchers = [this.dictionary_match, this.reverse_dictionary_match, this.l33t_match, this.spatial_match, this.repeat_match, this.sequence_match, this.regex_match, this.date_match];\n    for (o = 0, len1 = matchers.length; o < len1; o++) {\n      matcher = matchers[o];\n      this.extend(matches, matcher.call(this, password));\n    }\n    return this.sorted(matches);\n  },\n  dictionary_match: function(password, _ranked_dictionaries) {\n    var dictionary_name, i, j, len, matches, o, p, password_lower, rank, ranked_dict, ref, ref1, ref2, word;\n    if (_ranked_dictionaries == null) {\n      _ranked_dictionaries = RANKED_DICTIONARIES;\n    }\n    matches = [];\n    len = password.length;\n    password_lower = password.toLowerCase();\n    for (dictionary_name in _ranked_dictionaries) {\n      ranked_dict = _ranked_dictionaries[dictionary_name];\n      for (i = o = 0, ref = len; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {\n        for (j = p = ref1 = i, ref2 = len; ref1 <= ref2 ? p < ref2 : p > ref2; j = ref1 <= ref2 ? ++p : --p) {\n          if (password_lower.slice(i, +j + 1 || 9e9) in ranked_dict) {\n            word = password_lower.slice(i, +j + 1 || 9e9);\n            rank = ranked_dict[word];\n            matches.push({\n              pattern: 'dictionary',\n              i: i,\n              j: j,\n              token: password.slice(i, +j + 1 || 9e9),\n              matched_word: word,\n              rank: rank,\n              dictionary_name: dictionary_name,\n              reversed: false,\n              l33t: false\n            });\n          }\n        }\n      }\n    }\n    return this.sorted(matches);\n  },\n  reverse_dictionary_match: function(password, _ranked_dictionaries) {\n    var len1, match, matches, o, ref, reversed_password;\n    if (_ranked_dictionaries == null) {\n      _ranked_dictionaries = RANKED_DICTIONARIES;\n    }\n    reversed_password = password.split('').reverse().join('');\n    matches = this.dictionary_match(reversed_password, _ranked_dictionaries);\n    for (o = 0, len1 = matches.length; o < len1; o++) {\n      match = matches[o];\n      match.token = match.token.split('').reverse().join('');\n      match.reversed = true;\n      ref = [password.length - 1 - match.j, password.length - 1 - match.i], match.i = ref[0], match.j = ref[1];\n    }\n    return this.sorted(matches);\n  },\n  set_user_input_dictionary: function(ordered_list) {\n    return RANKED_DICTIONARIES['user_inputs'] = build_ranked_dict(ordered_list.slice());\n  },\n  relevant_l33t_subtable: function(password, table) {\n    var chr, len1, letter, o, password_chars, ref, relevant_subs, sub, subs, subtable;\n    password_chars = {};\n    ref = password.split('');\n    for (o = 0, len1 = ref.length; o < len1; o++) {\n      chr = ref[o];\n      password_chars[chr] = true;\n    }\n    subtable = {};\n    for (letter in table) {\n      subs = table[letter];\n      relevant_subs = (function() {\n        var len2, p, results;\n        results = [];\n        for (p = 0, len2 = subs.length; p < len2; p++) {\n          sub = subs[p];\n          if (sub in password_chars) {\n            results.push(sub);\n          }\n        }\n        return results;\n      })();\n      if (relevant_subs.length > 0) {\n        subtable[letter] = relevant_subs;\n      }\n    }\n    return subtable;\n  },\n  enumerate_l33t_subs: function(table) {\n    var chr, dedup, helper, k, keys, l33t_chr, len1, len2, o, p, ref, sub, sub_dict, sub_dicts, subs;\n    keys = (function() {\n      var results;\n      results = [];\n      for (k in table) {\n        results.push(k);\n      }\n      return results;\n    })();\n    subs = [[]];\n    dedup = function(subs) {\n      var assoc, deduped, label, len1, members, o, sub, v;\n      deduped = [];\n      members = {};\n      for (o = 0, len1 = subs.length; o < len1; o++) {\n        sub = subs[o];\n        assoc = (function() {\n          var len2, p, results;\n          results = [];\n          for (v = p = 0, len2 = sub.length; p < len2; v = ++p) {\n            k = sub[v];\n            results.push([k, v]);\n          }\n          return results;\n        })();\n        assoc.sort();\n        label = ((function() {\n          var len2, p, results;\n          results = [];\n          for (v = p = 0, len2 = assoc.length; p < len2; v = ++p) {\n            k = assoc[v];\n            results.push(k + ',' + v);\n          }\n          return results;\n        })()).join('-');\n        if (!(label in members)) {\n          members[label] = true;\n          deduped.push(sub);\n        }\n      }\n      return deduped;\n    };\n    helper = function(keys) {\n      var dup_l33t_index, first_key, i, l33t_chr, len1, len2, next_subs, o, p, q, ref, ref1, rest_keys, sub, sub_alternative, sub_extension;\n      if (!keys.length) {\n        return;\n      }\n      first_key = keys[0];\n      rest_keys = keys.slice(1);\n      next_subs = [];\n      ref = table[first_key];\n      for (o = 0, len1 = ref.length; o < len1; o++) {\n        l33t_chr = ref[o];\n        for (p = 0, len2 = subs.length; p < len2; p++) {\n          sub = subs[p];\n          dup_l33t_index = -1;\n          for (i = q = 0, ref1 = sub.length; 0 <= ref1 ? q < ref1 : q > ref1; i = 0 <= ref1 ? ++q : --q) {\n            if (sub[i][0] === l33t_chr) {\n              dup_l33t_index = i;\n              break;\n            }\n          }\n          if (dup_l33t_index === -1) {\n            sub_extension = sub.concat([[l33t_chr, first_key]]);\n            next_subs.push(sub_extension);\n          } else {\n            sub_alternative = sub.slice(0);\n            sub_alternative.splice(dup_l33t_index, 1);\n            sub_alternative.push([l33t_chr, first_key]);\n            next_subs.push(sub);\n            next_subs.push(sub_alternative);\n          }\n        }\n      }\n      subs = dedup(next_subs);\n      return helper(rest_keys);\n    };\n    helper(keys);\n    sub_dicts = [];\n    for (o = 0, len1 = subs.length; o < len1; o++) {\n      sub = subs[o];\n      sub_dict = {};\n      for (p = 0, len2 = sub.length; p < len2; p++) {\n        ref = sub[p], l33t_chr = ref[0], chr = ref[1];\n        sub_dict[l33t_chr] = chr;\n      }\n      sub_dicts.push(sub_dict);\n    }\n    return sub_dicts;\n  },\n  l33t_match: function(password, _ranked_dictionaries, _l33t_table) {\n    var chr, k, len1, len2, match, match_sub, matches, o, p, ref, ref1, sub, subbed_chr, subbed_password, token, v;\n    if (_ranked_dictionaries == null) {\n      _ranked_dictionaries = RANKED_DICTIONARIES;\n    }\n    if (_l33t_table == null) {\n      _l33t_table = L33T_TABLE;\n    }\n    matches = [];\n    ref = this.enumerate_l33t_subs(this.relevant_l33t_subtable(password, _l33t_table));\n    for (o = 0, len1 = ref.length; o < len1; o++) {\n      sub = ref[o];\n      if (this.empty(sub)) {\n        break;\n      }\n      subbed_password = this.translate(password, sub);\n      ref1 = this.dictionary_match(subbed_password, _ranked_dictionaries);\n      for (p = 0, len2 = ref1.length; p < len2; p++) {\n        match = ref1[p];\n        token = password.slice(match.i, +match.j + 1 || 9e9);\n        if (token.toLowerCase() === match.matched_word) {\n          continue;\n        }\n        match_sub = {};\n        for (subbed_chr in sub) {\n          chr = sub[subbed_chr];\n          if (token.indexOf(subbed_chr) !== -1) {\n            match_sub[subbed_chr] = chr;\n          }\n        }\n        match.l33t = true;\n        match.token = token;\n        match.sub = match_sub;\n        match.sub_display = ((function() {\n          var results;\n          results = [];\n          for (k in match_sub) {\n            v = match_sub[k];\n            results.push(k + \" -> \" + v);\n          }\n          return results;\n        })()).join(', ');\n        matches.push(match);\n      }\n    }\n    return this.sorted(matches.filter(function(match) {\n      return match.token.length > 1;\n    }));\n  },\n  spatial_match: function(password, _graphs) {\n    var graph, graph_name, matches;\n    if (_graphs == null) {\n      _graphs = GRAPHS;\n    }\n    matches = [];\n    for (graph_name in _graphs) {\n      graph = _graphs[graph_name];\n      this.extend(matches, this.spatial_match_helper(password, graph, graph_name));\n    }\n    return this.sorted(matches);\n  },\n  SHIFTED_RX: /[~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:\"ZXCVBNM<>?]/,\n  spatial_match_helper: function(password, graph, graph_name) {\n    var adj, adjacents, cur_char, cur_direction, found, found_direction, i, j, last_direction, len1, matches, o, prev_char, shifted_count, turns;\n    matches = [];\n    i = 0;\n    while (i < password.length - 1) {\n      j = i + 1;\n      last_direction = null;\n      turns = 0;\n      if ((graph_name === 'qwerty' || graph_name === 'dvorak') && this.SHIFTED_RX.exec(password.charAt(i))) {\n        shifted_count = 1;\n      } else {\n        shifted_count = 0;\n      }\n      while (true) {\n        prev_char = password.charAt(j - 1);\n        found = false;\n        found_direction = -1;\n        cur_direction = -1;\n        adjacents = graph[prev_char] || [];\n        if (j < password.length) {\n          cur_char = password.charAt(j);\n          for (o = 0, len1 = adjacents.length; o < len1; o++) {\n            adj = adjacents[o];\n            cur_direction += 1;\n            if (adj && adj.indexOf(cur_char) !== -1) {\n              found = true;\n              found_direction = cur_direction;\n              if (adj.indexOf(cur_char) === 1) {\n                shifted_count += 1;\n              }\n              if (last_direction !== found_direction) {\n                turns += 1;\n                last_direction = found_direction;\n              }\n              break;\n            }\n          }\n        }\n        if (found) {\n          j += 1;\n        } else {\n          if (j - i > 2) {\n            matches.push({\n              pattern: 'spatial',\n              i: i,\n              j: j - 1,\n              token: password.slice(i, j),\n              graph: graph_name,\n              turns: turns,\n              shifted_count: shifted_count\n            });\n          }\n          i = j;\n          break;\n        }\n      }\n    }\n    return matches;\n  },\n  repeat_match: function(password) {\n    var base_analysis, base_guesses, base_matches, base_token, greedy, greedy_match, i, j, lastIndex, lazy, lazy_anchored, lazy_match, match, matches, ref;\n    matches = [];\n    greedy = /(.+)\\1+/g;\n    lazy = /(.+?)\\1+/g;\n    lazy_anchored = /^(.+?)\\1+$/;\n    lastIndex = 0;\n    while (lastIndex < password.length) {\n      greedy.lastIndex = lazy.lastIndex = lastIndex;\n      greedy_match = greedy.exec(password);\n      lazy_match = lazy.exec(password);\n      if (greedy_match == null) {\n        break;\n      }\n      if (greedy_match[0].length > lazy_match[0].length) {\n        match = greedy_match;\n        base_token = lazy_anchored.exec(match[0])[1];\n      } else {\n        match = lazy_match;\n        base_token = match[1];\n      }\n      ref = [match.index, match.index + match[0].length - 1], i = ref[0], j = ref[1];\n      base_analysis = scoring.most_guessable_match_sequence(base_token, this.omnimatch(base_token));\n      base_matches = base_analysis.sequence;\n      base_guesses = base_analysis.guesses;\n      matches.push({\n        pattern: 'repeat',\n        i: i,\n        j: j,\n        token: match[0],\n        base_token: base_token,\n        base_guesses: base_guesses,\n        base_matches: base_matches,\n        repeat_count: match[0].length / base_token.length\n      });\n      lastIndex = j + 1;\n    }\n    return matches;\n  },\n  MAX_DELTA: 5,\n  sequence_match: function(password) {\n    var delta, i, j, k, last_delta, o, ref, result, update;\n    if (password.length === 1) {\n      return [];\n    }\n    update = (function(_this) {\n      return function(i, j, delta) {\n        var ref, sequence_name, sequence_space, token;\n        if (j - i > 1 || Math.abs(delta) === 1) {\n          if ((0 < (ref = Math.abs(delta)) && ref <= _this.MAX_DELTA)) {\n            token = password.slice(i, +j + 1 || 9e9);\n            if (/^[a-z]+$/.test(token)) {\n              sequence_name = 'lower';\n              sequence_space = 26;\n            } else if (/^[A-Z]+$/.test(token)) {\n              sequence_name = 'upper';\n              sequence_space = 26;\n            } else if (/^\\d+$/.test(token)) {\n              sequence_name = 'digits';\n              sequence_space = 10;\n            } else {\n              sequence_name = 'unicode';\n              sequence_space = 26;\n            }\n            return result.push({\n              pattern: 'sequence',\n              i: i,\n              j: j,\n              token: password.slice(i, +j + 1 || 9e9),\n              sequence_name: sequence_name,\n              sequence_space: sequence_space,\n              ascending: delta > 0\n            });\n          }\n        }\n      };\n    })(this);\n    result = [];\n    i = 0;\n    last_delta = null;\n    for (k = o = 1, ref = password.length; 1 <= ref ? o < ref : o > ref; k = 1 <= ref ? ++o : --o) {\n      delta = password.charCodeAt(k) - password.charCodeAt(k - 1);\n      if (last_delta == null) {\n        last_delta = delta;\n      }\n      if (delta === last_delta) {\n        continue;\n      }\n      j = k - 1;\n      update(i, j, last_delta);\n      i = j;\n      last_delta = delta;\n    }\n    update(i, password.length - 1, last_delta);\n    return result;\n  },\n  regex_match: function(password, _regexen) {\n    var matches, regex, rx_match, token;\n    if (_regexen == null) {\n      _regexen = REGEXEN;\n    }\n    matches = [];\n    for (name in _regexen) {\n      regex = _regexen[name];\n      regex.lastIndex = 0;\n      while (rx_match = regex.exec(password)) {\n        token = rx_match[0];\n        matches.push({\n          pattern: 'regex',\n          token: token,\n          i: rx_match.index,\n          j: rx_match.index + rx_match[0].length - 1,\n          regex_name: name,\n          regex_match: rx_match\n        });\n      }\n    }\n    return this.sorted(matches);\n  },\n  date_match: function(password) {\n    var best_candidate, candidate, candidates, distance, dmy, i, j, k, l, len1, len2, matches, maybe_date_no_separator, maybe_date_with_separator, metric, min_distance, o, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, rx_match, s, t, token;\n    matches = [];\n    maybe_date_no_separator = /^\\d{4,8}$/;\n    maybe_date_with_separator = /^(\\d{1,4})([\\s\\/\\\\_.-])(\\d{1,2})\\2(\\d{1,4})$/;\n    for (i = o = 0, ref = password.length - 4; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n      for (j = p = ref1 = i + 3, ref2 = i + 7; ref1 <= ref2 ? p <= ref2 : p >= ref2; j = ref1 <= ref2 ? ++p : --p) {\n        if (j >= password.length) {\n          break;\n        }\n        token = password.slice(i, +j + 1 || 9e9);\n        if (!maybe_date_no_separator.exec(token)) {\n          continue;\n        }\n        candidates = [];\n        ref3 = DATE_SPLITS[token.length];\n        for (q = 0, len1 = ref3.length; q < len1; q++) {\n          ref4 = ref3[q], k = ref4[0], l = ref4[1];\n          dmy = this.map_ints_to_dmy([parseInt(token.slice(0, k)), parseInt(token.slice(k, l)), parseInt(token.slice(l))]);\n          if (dmy != null) {\n            candidates.push(dmy);\n          }\n        }\n        if (!(candidates.length > 0)) {\n          continue;\n        }\n        best_candidate = candidates[0];\n        metric = function(candidate) {\n          return Math.abs(candidate.year - scoring.REFERENCE_YEAR);\n        };\n        min_distance = metric(candidates[0]);\n        ref5 = candidates.slice(1);\n        for (r = 0, len2 = ref5.length; r < len2; r++) {\n          candidate = ref5[r];\n          distance = metric(candidate);\n          if (distance < min_distance) {\n            ref6 = [candidate, distance], best_candidate = ref6[0], min_distance = ref6[1];\n          }\n        }\n        matches.push({\n          pattern: 'date',\n          token: token,\n          i: i,\n          j: j,\n          separator: '',\n          year: best_candidate.year,\n          month: best_candidate.month,\n          day: best_candidate.day\n        });\n      }\n    }\n    for (i = s = 0, ref7 = password.length - 6; 0 <= ref7 ? s <= ref7 : s >= ref7; i = 0 <= ref7 ? ++s : --s) {\n      for (j = t = ref8 = i + 5, ref9 = i + 9; ref8 <= ref9 ? t <= ref9 : t >= ref9; j = ref8 <= ref9 ? ++t : --t) {\n        if (j >= password.length) {\n          break;\n        }\n        token = password.slice(i, +j + 1 || 9e9);\n        rx_match = maybe_date_with_separator.exec(token);\n        if (rx_match == null) {\n          continue;\n        }\n        dmy = this.map_ints_to_dmy([parseInt(rx_match[1]), parseInt(rx_match[3]), parseInt(rx_match[4])]);\n        if (dmy == null) {\n          continue;\n        }\n        matches.push({\n          pattern: 'date',\n          token: token,\n          i: i,\n          j: j,\n          separator: rx_match[2],\n          year: dmy.year,\n          month: dmy.month,\n          day: dmy.day\n        });\n      }\n    }\n    return this.sorted(matches.filter(function(match) {\n      var is_submatch, len3, other_match, u;\n      is_submatch = false;\n      for (u = 0, len3 = matches.length; u < len3; u++) {\n        other_match = matches[u];\n        if (match === other_match) {\n          continue;\n        }\n        if (other_match.i <= match.i && other_match.j >= match.j) {\n          is_submatch = true;\n          break;\n        }\n      }\n      return !is_submatch;\n    }));\n  },\n  map_ints_to_dmy: function(ints) {\n    var dm, int, len1, len2, len3, o, over_12, over_31, p, possible_year_splits, q, ref, ref1, rest, under_1, y;\n    if (ints[1] > 31 || ints[1] <= 0) {\n      return;\n    }\n    over_12 = 0;\n    over_31 = 0;\n    under_1 = 0;\n    for (o = 0, len1 = ints.length; o < len1; o++) {\n      int = ints[o];\n      if ((99 < int && int < DATE_MIN_YEAR) || int > DATE_MAX_YEAR) {\n        return;\n      }\n      if (int > 31) {\n        over_31 += 1;\n      }\n      if (int > 12) {\n        over_12 += 1;\n      }\n      if (int <= 0) {\n        under_1 += 1;\n      }\n    }\n    if (over_31 >= 2 || over_12 === 3 || under_1 >= 2) {\n      return;\n    }\n    possible_year_splits = [[ints[2], ints.slice(0, 2)], [ints[0], ints.slice(1, 3)]];\n    for (p = 0, len2 = possible_year_splits.length; p < len2; p++) {\n      ref = possible_year_splits[p], y = ref[0], rest = ref[1];\n      if ((DATE_MIN_YEAR <= y && y <= DATE_MAX_YEAR)) {\n        dm = this.map_ints_to_dm(rest);\n        if (dm != null) {\n          return {\n            year: y,\n            month: dm.month,\n            day: dm.day\n          };\n        } else {\n          return;\n        }\n      }\n    }\n    for (q = 0, len3 = possible_year_splits.length; q < len3; q++) {\n      ref1 = possible_year_splits[q], y = ref1[0], rest = ref1[1];\n      dm = this.map_ints_to_dm(rest);\n      if (dm != null) {\n        y = this.two_to_four_digit_year(y);\n        return {\n          year: y,\n          month: dm.month,\n          day: dm.day\n        };\n      }\n    }\n  },\n  map_ints_to_dm: function(ints) {\n    var d, len1, m, o, ref, ref1;\n    ref = [ints, ints.slice().reverse()];\n    for (o = 0, len1 = ref.length; o < len1; o++) {\n      ref1 = ref[o], d = ref1[0], m = ref1[1];\n      if ((1 <= d && d <= 31) && (1 <= m && m <= 12)) {\n        return {\n          day: d,\n          month: m\n        };\n      }\n    }\n  },\n  two_to_four_digit_year: function(year) {\n    if (year > 99) {\n      return year;\n    } else if (year > 50) {\n      return year + 1900;\n    } else {\n      return year + 2000;\n    }\n  }\n};\n\nmodule.exports = matching;\n\n//# sourceMappingURL=matching.js.map\n","// Generated by CoffeeScript 1.10.0\nvar adjacency_graphs;\n\nadjacency_graphs = {\n  qwerty: {\n    \"!\": [\"`~\", null, null, \"2@\", \"qQ\", null],\n    \"\\\"\": [\";:\", \"[{\", \"]}\", null, null, \"/?\"],\n    \"#\": [\"2@\", null, null, \"4$\", \"eE\", \"wW\"],\n    \"$\": [\"3#\", null, null, \"5%\", \"rR\", \"eE\"],\n    \"%\": [\"4$\", null, null, \"6^\", \"tT\", \"rR\"],\n    \"&\": [\"6^\", null, null, \"8*\", \"uU\", \"yY\"],\n    \"'\": [\";:\", \"[{\", \"]}\", null, null, \"/?\"],\n    \"(\": [\"8*\", null, null, \"0)\", \"oO\", \"iI\"],\n    \")\": [\"9(\", null, null, \"-_\", \"pP\", \"oO\"],\n    \"*\": [\"7&\", null, null, \"9(\", \"iI\", \"uU\"],\n    \"+\": [\"-_\", null, null, null, \"]}\", \"[{\"],\n    \",\": [\"mM\", \"kK\", \"lL\", \".>\", null, null],\n    \"-\": [\"0)\", null, null, \"=+\", \"[{\", \"pP\"],\n    \".\": [\",<\", \"lL\", \";:\", \"/?\", null, null],\n    \"/\": [\".>\", \";:\", \"'\\\"\", null, null, null],\n    \"0\": [\"9(\", null, null, \"-_\", \"pP\", \"oO\"],\n    \"1\": [\"`~\", null, null, \"2@\", \"qQ\", null],\n    \"2\": [\"1!\", null, null, \"3#\", \"wW\", \"qQ\"],\n    \"3\": [\"2@\", null, null, \"4$\", \"eE\", \"wW\"],\n    \"4\": [\"3#\", null, null, \"5%\", \"rR\", \"eE\"],\n    \"5\": [\"4$\", null, null, \"6^\", \"tT\", \"rR\"],\n    \"6\": [\"5%\", null, null, \"7&\", \"yY\", \"tT\"],\n    \"7\": [\"6^\", null, null, \"8*\", \"uU\", \"yY\"],\n    \"8\": [\"7&\", null, null, \"9(\", \"iI\", \"uU\"],\n    \"9\": [\"8*\", null, null, \"0)\", \"oO\", \"iI\"],\n    \":\": [\"lL\", \"pP\", \"[{\", \"'\\\"\", \"/?\", \".>\"],\n    \";\": [\"lL\", \"pP\", \"[{\", \"'\\\"\", \"/?\", \".>\"],\n    \"<\": [\"mM\", \"kK\", \"lL\", \".>\", null, null],\n    \"=\": [\"-_\", null, null, null, \"]}\", \"[{\"],\n    \">\": [\",<\", \"lL\", \";:\", \"/?\", null, null],\n    \"?\": [\".>\", \";:\", \"'\\\"\", null, null, null],\n    \"@\": [\"1!\", null, null, \"3#\", \"wW\", \"qQ\"],\n    \"A\": [null, \"qQ\", \"wW\", \"sS\", \"zZ\", null],\n    \"B\": [\"vV\", \"gG\", \"hH\", \"nN\", null, null],\n    \"C\": [\"xX\", \"dD\", \"fF\", \"vV\", null, null],\n    \"D\": [\"sS\", \"eE\", \"rR\", \"fF\", \"cC\", \"xX\"],\n    \"E\": [\"wW\", \"3#\", \"4$\", \"rR\", \"dD\", \"sS\"],\n    \"F\": [\"dD\", \"rR\", \"tT\", \"gG\", \"vV\", \"cC\"],\n    \"G\": [\"fF\", \"tT\", \"yY\", \"hH\", \"bB\", \"vV\"],\n    \"H\": [\"gG\", \"yY\", \"uU\", \"jJ\", \"nN\", \"bB\"],\n    \"I\": [\"uU\", \"8*\", \"9(\", \"oO\", \"kK\", \"jJ\"],\n    \"J\": [\"hH\", \"uU\", \"iI\", \"kK\", \"mM\", \"nN\"],\n    \"K\": [\"jJ\", \"iI\", \"oO\", \"lL\", \",<\", \"mM\"],\n    \"L\": [\"kK\", \"oO\", \"pP\", \";:\", \".>\", \",<\"],\n    \"M\": [\"nN\", \"jJ\", \"kK\", \",<\", null, null],\n    \"N\": [\"bB\", \"hH\", \"jJ\", \"mM\", null, null],\n    \"O\": [\"iI\", \"9(\", \"0)\", \"pP\", \"lL\", \"kK\"],\n    \"P\": [\"oO\", \"0)\", \"-_\", \"[{\", \";:\", \"lL\"],\n    \"Q\": [null, \"1!\", \"2@\", \"wW\", \"aA\", null],\n    \"R\": [\"eE\", \"4$\", \"5%\", \"tT\", \"fF\", \"dD\"],\n    \"S\": [\"aA\", \"wW\", \"eE\", \"dD\", \"xX\", \"zZ\"],\n    \"T\": [\"rR\", \"5%\", \"6^\", \"yY\", \"gG\", \"fF\"],\n    \"U\": [\"yY\", \"7&\", \"8*\", \"iI\", \"jJ\", \"hH\"],\n    \"V\": [\"cC\", \"fF\", \"gG\", \"bB\", null, null],\n    \"W\": [\"qQ\", \"2@\", \"3#\", \"eE\", \"sS\", \"aA\"],\n    \"X\": [\"zZ\", \"sS\", \"dD\", \"cC\", null, null],\n    \"Y\": [\"tT\", \"6^\", \"7&\", \"uU\", \"hH\", \"gG\"],\n    \"Z\": [null, \"aA\", \"sS\", \"xX\", null, null],\n    \"[\": [\"pP\", \"-_\", \"=+\", \"]}\", \"'\\\"\", \";:\"],\n    \"\\\\\": [\"]}\", null, null, null, null, null],\n    \"]\": [\"[{\", \"=+\", null, \"\\\\|\", null, \"'\\\"\"],\n    \"^\": [\"5%\", null, null, \"7&\", \"yY\", \"tT\"],\n    \"_\": [\"0)\", null, null, \"=+\", \"[{\", \"pP\"],\n    \"`\": [null, null, null, \"1!\", null, null],\n    \"a\": [null, \"qQ\", \"wW\", \"sS\", \"zZ\", null],\n    \"b\": [\"vV\", \"gG\", \"hH\", \"nN\", null, null],\n    \"c\": [\"xX\", \"dD\", \"fF\", \"vV\", null, null],\n    \"d\": [\"sS\", \"eE\", \"rR\", \"fF\", \"cC\", \"xX\"],\n    \"e\": [\"wW\", \"3#\", \"4$\", \"rR\", \"dD\", \"sS\"],\n    \"f\": [\"dD\", \"rR\", \"tT\", \"gG\", \"vV\", \"cC\"],\n    \"g\": [\"fF\", \"tT\", \"yY\", \"hH\", \"bB\", \"vV\"],\n    \"h\": [\"gG\", \"yY\", \"uU\", \"jJ\", \"nN\", \"bB\"],\n    \"i\": [\"uU\", \"8*\", \"9(\", \"oO\", \"kK\", \"jJ\"],\n    \"j\": [\"hH\", \"uU\", \"iI\", \"kK\", \"mM\", \"nN\"],\n    \"k\": [\"jJ\", \"iI\", \"oO\", \"lL\", \",<\", \"mM\"],\n    \"l\": [\"kK\", \"oO\", \"pP\", \";:\", \".>\", \",<\"],\n    \"m\": [\"nN\", \"jJ\", \"kK\", \",<\", null, null],\n    \"n\": [\"bB\", \"hH\", \"jJ\", \"mM\", null, null],\n    \"o\": [\"iI\", \"9(\", \"0)\", \"pP\", \"lL\", \"kK\"],\n    \"p\": [\"oO\", \"0)\", \"-_\", \"[{\", \";:\", \"lL\"],\n    \"q\": [null, \"1!\", \"2@\", \"wW\", \"aA\", null],\n    \"r\": [\"eE\", \"4$\", \"5%\", \"tT\", \"fF\", \"dD\"],\n    \"s\": [\"aA\", \"wW\", \"eE\", \"dD\", \"xX\", \"zZ\"],\n    \"t\": [\"rR\", \"5%\", \"6^\", \"yY\", \"gG\", \"fF\"],\n    \"u\": [\"yY\", \"7&\", \"8*\", \"iI\", \"jJ\", \"hH\"],\n    \"v\": [\"cC\", \"fF\", \"gG\", \"bB\", null, null],\n    \"w\": [\"qQ\", \"2@\", \"3#\", \"eE\", \"sS\", \"aA\"],\n    \"x\": [\"zZ\", \"sS\", \"dD\", \"cC\", null, null],\n    \"y\": [\"tT\", \"6^\", \"7&\", \"uU\", \"hH\", \"gG\"],\n    \"z\": [null, \"aA\", \"sS\", \"xX\", null, null],\n    \"{\": [\"pP\", \"-_\", \"=+\", \"]}\", \"'\\\"\", \";:\"],\n    \"|\": [\"]}\", null, null, null, null, null],\n    \"}\": [\"[{\", \"=+\", null, \"\\\\|\", null, \"'\\\"\"],\n    \"~\": [null, null, null, \"1!\", null, null]\n  },\n  dvorak: {\n    \"!\": [\"`~\", null, null, \"2@\", \"'\\\"\", null],\n    \"\\\"\": [null, \"1!\", \"2@\", \",<\", \"aA\", null],\n    \"#\": [\"2@\", null, null, \"4$\", \".>\", \",<\"],\n    \"$\": [\"3#\", null, null, \"5%\", \"pP\", \".>\"],\n    \"%\": [\"4$\", null, null, \"6^\", \"yY\", \"pP\"],\n    \"&\": [\"6^\", null, null, \"8*\", \"gG\", \"fF\"],\n    \"'\": [null, \"1!\", \"2@\", \",<\", \"aA\", null],\n    \"(\": [\"8*\", null, null, \"0)\", \"rR\", \"cC\"],\n    \")\": [\"9(\", null, null, \"[{\", \"lL\", \"rR\"],\n    \"*\": [\"7&\", null, null, \"9(\", \"cC\", \"gG\"],\n    \"+\": [\"/?\", \"]}\", null, \"\\\\|\", null, \"-_\"],\n    \",\": [\"'\\\"\", \"2@\", \"3#\", \".>\", \"oO\", \"aA\"],\n    \"-\": [\"sS\", \"/?\", \"=+\", null, null, \"zZ\"],\n    \".\": [\",<\", \"3#\", \"4$\", \"pP\", \"eE\", \"oO\"],\n    \"/\": [\"lL\", \"[{\", \"]}\", \"=+\", \"-_\", \"sS\"],\n    \"0\": [\"9(\", null, null, \"[{\", \"lL\", \"rR\"],\n    \"1\": [\"`~\", null, null, \"2@\", \"'\\\"\", null],\n    \"2\": [\"1!\", null, null, \"3#\", \",<\", \"'\\\"\"],\n    \"3\": [\"2@\", null, null, \"4$\", \".>\", \",<\"],\n    \"4\": [\"3#\", null, null, \"5%\", \"pP\", \".>\"],\n    \"5\": [\"4$\", null, null, \"6^\", \"yY\", \"pP\"],\n    \"6\": [\"5%\", null, null, \"7&\", \"fF\", \"yY\"],\n    \"7\": [\"6^\", null, null, \"8*\", \"gG\", \"fF\"],\n    \"8\": [\"7&\", null, null, \"9(\", \"cC\", \"gG\"],\n    \"9\": [\"8*\", null, null, \"0)\", \"rR\", \"cC\"],\n    \":\": [null, \"aA\", \"oO\", \"qQ\", null, null],\n    \";\": [null, \"aA\", \"oO\", \"qQ\", null, null],\n    \"<\": [\"'\\\"\", \"2@\", \"3#\", \".>\", \"oO\", \"aA\"],\n    \"=\": [\"/?\", \"]}\", null, \"\\\\|\", null, \"-_\"],\n    \">\": [\",<\", \"3#\", \"4$\", \"pP\", \"eE\", \"oO\"],\n    \"?\": [\"lL\", \"[{\", \"]}\", \"=+\", \"-_\", \"sS\"],\n    \"@\": [\"1!\", null, null, \"3#\", \",<\", \"'\\\"\"],\n    \"A\": [null, \"'\\\"\", \",<\", \"oO\", \";:\", null],\n    \"B\": [\"xX\", \"dD\", \"hH\", \"mM\", null, null],\n    \"C\": [\"gG\", \"8*\", \"9(\", \"rR\", \"tT\", \"hH\"],\n    \"D\": [\"iI\", \"fF\", \"gG\", \"hH\", \"bB\", \"xX\"],\n    \"E\": [\"oO\", \".>\", \"pP\", \"uU\", \"jJ\", \"qQ\"],\n    \"F\": [\"yY\", \"6^\", \"7&\", \"gG\", \"dD\", \"iI\"],\n    \"G\": [\"fF\", \"7&\", \"8*\", \"cC\", \"hH\", \"dD\"],\n    \"H\": [\"dD\", \"gG\", \"cC\", \"tT\", \"mM\", \"bB\"],\n    \"I\": [\"uU\", \"yY\", \"fF\", \"dD\", \"xX\", \"kK\"],\n    \"J\": [\"qQ\", \"eE\", \"uU\", \"kK\", null, null],\n    \"K\": [\"jJ\", \"uU\", \"iI\", \"xX\", null, null],\n    \"L\": [\"rR\", \"0)\", \"[{\", \"/?\", \"sS\", \"nN\"],\n    \"M\": [\"bB\", \"hH\", \"tT\", \"wW\", null, null],\n    \"N\": [\"tT\", \"rR\", \"lL\", \"sS\", \"vV\", \"wW\"],\n    \"O\": [\"aA\", \",<\", \".>\", \"eE\", \"qQ\", \";:\"],\n    \"P\": [\".>\", \"4$\", \"5%\", \"yY\", \"uU\", \"eE\"],\n    \"Q\": [\";:\", \"oO\", \"eE\", \"jJ\", null, null],\n    \"R\": [\"cC\", \"9(\", \"0)\", \"lL\", \"nN\", \"tT\"],\n    \"S\": [\"nN\", \"lL\", \"/?\", \"-_\", \"zZ\", \"vV\"],\n    \"T\": [\"hH\", \"cC\", \"rR\", \"nN\", \"wW\", \"mM\"],\n    \"U\": [\"eE\", \"pP\", \"yY\", \"iI\", \"kK\", \"jJ\"],\n    \"V\": [\"wW\", \"nN\", \"sS\", \"zZ\", null, null],\n    \"W\": [\"mM\", \"tT\", \"nN\", \"vV\", null, null],\n    \"X\": [\"kK\", \"iI\", \"dD\", \"bB\", null, null],\n    \"Y\": [\"pP\", \"5%\", \"6^\", \"fF\", \"iI\", \"uU\"],\n    \"Z\": [\"vV\", \"sS\", \"-_\", null, null, null],\n    \"[\": [\"0)\", null, null, \"]}\", \"/?\", \"lL\"],\n    \"\\\\\": [\"=+\", null, null, null, null, null],\n    \"]\": [\"[{\", null, null, null, \"=+\", \"/?\"],\n    \"^\": [\"5%\", null, null, \"7&\", \"fF\", \"yY\"],\n    \"_\": [\"sS\", \"/?\", \"=+\", null, null, \"zZ\"],\n    \"`\": [null, null, null, \"1!\", null, null],\n    \"a\": [null, \"'\\\"\", \",<\", \"oO\", \";:\", null],\n    \"b\": [\"xX\", \"dD\", \"hH\", \"mM\", null, null],\n    \"c\": [\"gG\", \"8*\", \"9(\", \"rR\", \"tT\", \"hH\"],\n    \"d\": [\"iI\", \"fF\", \"gG\", \"hH\", \"bB\", \"xX\"],\n    \"e\": [\"oO\", \".>\", \"pP\", \"uU\", \"jJ\", \"qQ\"],\n    \"f\": [\"yY\", \"6^\", \"7&\", \"gG\", \"dD\", \"iI\"],\n    \"g\": [\"fF\", \"7&\", \"8*\", \"cC\", \"hH\", \"dD\"],\n    \"h\": [\"dD\", \"gG\", \"cC\", \"tT\", \"mM\", \"bB\"],\n    \"i\": [\"uU\", \"yY\", \"fF\", \"dD\", \"xX\", \"kK\"],\n    \"j\": [\"qQ\", \"eE\", \"uU\", \"kK\", null, null],\n    \"k\": [\"jJ\", \"uU\", \"iI\", \"xX\", null, null],\n    \"l\": [\"rR\", \"0)\", \"[{\", \"/?\", \"sS\", \"nN\"],\n    \"m\": [\"bB\", \"hH\", \"tT\", \"wW\", null, null],\n    \"n\": [\"tT\", \"rR\", \"lL\", \"sS\", \"vV\", \"wW\"],\n    \"o\": [\"aA\", \",<\", \".>\", \"eE\", \"qQ\", \";:\"],\n    \"p\": [\".>\", \"4$\", \"5%\", \"yY\", \"uU\", \"eE\"],\n    \"q\": [\";:\", \"oO\", \"eE\", \"jJ\", null, null],\n    \"r\": [\"cC\", \"9(\", \"0)\", \"lL\", \"nN\", \"tT\"],\n    \"s\": [\"nN\", \"lL\", \"/?\", \"-_\", \"zZ\", \"vV\"],\n    \"t\": [\"hH\", \"cC\", \"rR\", \"nN\", \"wW\", \"mM\"],\n    \"u\": [\"eE\", \"pP\", \"yY\", \"iI\", \"kK\", \"jJ\"],\n    \"v\": [\"wW\", \"nN\", \"sS\", \"zZ\", null, null],\n    \"w\": [\"mM\", \"tT\", \"nN\", \"vV\", null, null],\n    \"x\": [\"kK\", \"iI\", \"dD\", \"bB\", null, null],\n    \"y\": [\"pP\", \"5%\", \"6^\", \"fF\", \"iI\", \"uU\"],\n    \"z\": [\"vV\", \"sS\", \"-_\", null, null, null],\n    \"{\": [\"0)\", null, null, \"]}\", \"/?\", \"lL\"],\n    \"|\": [\"=+\", null, null, null, null, null],\n    \"}\": [\"[{\", null, null, null, \"=+\", \"/?\"],\n    \"~\": [null, null, null, \"1!\", null, null]\n  },\n  keypad: {\n    \"*\": [\"/\", null, null, null, \"-\", \"+\", \"9\", \"8\"],\n    \"+\": [\"9\", \"*\", \"-\", null, null, null, null, \"6\"],\n    \"-\": [\"*\", null, null, null, null, null, \"+\", \"9\"],\n    \".\": [\"0\", \"2\", \"3\", null, null, null, null, null],\n    \"/\": [null, null, null, null, \"*\", \"9\", \"8\", \"7\"],\n    \"0\": [null, \"1\", \"2\", \"3\", \".\", null, null, null],\n    \"1\": [null, null, \"4\", \"5\", \"2\", \"0\", null, null],\n    \"2\": [\"1\", \"4\", \"5\", \"6\", \"3\", \".\", \"0\", null],\n    \"3\": [\"2\", \"5\", \"6\", null, null, null, \".\", \"0\"],\n    \"4\": [null, null, \"7\", \"8\", \"5\", \"2\", \"1\", null],\n    \"5\": [\"4\", \"7\", \"8\", \"9\", \"6\", \"3\", \"2\", \"1\"],\n    \"6\": [\"5\", \"8\", \"9\", \"+\", null, null, \"3\", \"2\"],\n    \"7\": [null, null, null, \"/\", \"8\", \"5\", \"4\", null],\n    \"8\": [\"7\", null, \"/\", \"*\", \"9\", \"6\", \"5\", \"4\"],\n    \"9\": [\"8\", \"/\", \"*\", \"-\", \"+\", null, \"6\", \"5\"]\n  },\n  mac_keypad: {\n    \"*\": [\"/\", null, null, null, null, null, \"-\", \"9\"],\n    \"+\": [\"6\", \"9\", \"-\", null, null, null, null, \"3\"],\n    \"-\": [\"9\", \"/\", \"*\", null, null, null, \"+\", \"6\"],\n    \".\": [\"0\", \"2\", \"3\", null, null, null, null, null],\n    \"/\": [\"=\", null, null, null, \"*\", \"-\", \"9\", \"8\"],\n    \"0\": [null, \"1\", \"2\", \"3\", \".\", null, null, null],\n    \"1\": [null, null, \"4\", \"5\", \"2\", \"0\", null, null],\n    \"2\": [\"1\", \"4\", \"5\", \"6\", \"3\", \".\", \"0\", null],\n    \"3\": [\"2\", \"5\", \"6\", \"+\", null, null, \".\", \"0\"],\n    \"4\": [null, null, \"7\", \"8\", \"5\", \"2\", \"1\", null],\n    \"5\": [\"4\", \"7\", \"8\", \"9\", \"6\", \"3\", \"2\", \"1\"],\n    \"6\": [\"5\", \"8\", \"9\", \"-\", \"+\", null, \"3\", \"2\"],\n    \"7\": [null, null, null, \"=\", \"8\", \"5\", \"4\", null],\n    \"8\": [\"7\", null, \"=\", \"/\", \"9\", \"6\", \"5\", \"4\"],\n    \"9\": [\"8\", \"=\", \"/\", \"*\", \"-\", \"+\", \"6\", \"5\"],\n    \"=\": [null, null, null, null, \"/\", \"9\", \"8\", \"7\"]\n  }\n};\n\nmodule.exports = adjacency_graphs;\n\n//# sourceMappingURL=adjacency_graphs.js.map\n","// Generated by CoffeeScript 1.10.0\nvar feedback, scoring;\n\nscoring = require('./scoring');\n\nfeedback = {\n  default_feedback: {\n    warning: '',\n    suggestions: [\"Use a few words, avoid common phrases\", \"No need for symbols, digits, or uppercase letters\"]\n  },\n  get_feedback: function(score, sequence) {\n    var extra_feedback, i, len, longest_match, match, ref;\n    if (sequence.length === 0) {\n      return this.default_feedback;\n    }\n    if (score > 2) {\n      return {\n        warning: '',\n        suggestions: []\n      };\n    }\n    longest_match = sequence[0];\n    ref = sequence.slice(1);\n    for (i = 0, len = ref.length; i < len; i++) {\n      match = ref[i];\n      if (match.token.length > longest_match.token.length) {\n        longest_match = match;\n      }\n    }\n    feedback = this.get_match_feedback(longest_match, sequence.length === 1);\n    extra_feedback = 'Add another word or two. Uncommon words are better.';\n    if (feedback != null) {\n      feedback.suggestions.unshift(extra_feedback);\n      if (feedback.warning == null) {\n        feedback.warning = '';\n      }\n    } else {\n      feedback = {\n        warning: '',\n        suggestions: [extra_feedback]\n      };\n    }\n    return feedback;\n  },\n  get_match_feedback: function(match, is_sole_match) {\n    var layout, warning;\n    switch (match.pattern) {\n      case 'dictionary':\n        return this.get_dictionary_match_feedback(match, is_sole_match);\n      case 'spatial':\n        layout = match.graph.toUpperCase();\n        warning = match.turns === 1 ? 'Straight rows of keys are easy to guess' : 'Short keyboard patterns are easy to guess';\n        return {\n          warning: warning,\n          suggestions: ['Use a longer keyboard pattern with more turns']\n        };\n      case 'repeat':\n        warning = match.base_token.length === 1 ? 'Repeats like \"aaa\" are easy to guess' : 'Repeats like \"abcabcabc\" are only slightly harder to guess than \"abc\"';\n        return {\n          warning: warning,\n          suggestions: ['Avoid repeated words and characters']\n        };\n      case 'sequence':\n        return {\n          warning: \"Sequences like abc or 6543 are easy to guess\",\n          suggestions: ['Avoid sequences']\n        };\n      case 'regex':\n        if (match.regex_name === 'recent_year') {\n          return {\n            warning: \"Recent years are easy to guess\",\n            suggestions: ['Avoid recent years', 'Avoid years that are associated with you']\n          };\n        }\n        break;\n      case 'date':\n        return {\n          warning: \"Dates are often easy to guess\",\n          suggestions: ['Avoid dates and years that are associated with you']\n        };\n    }\n  },\n  get_dictionary_match_feedback: function(match, is_sole_match) {\n    var ref, result, suggestions, warning, word;\n    warning = match.dictionary_name === 'passwords' ? is_sole_match && !match.l33t && !match.reversed ? match.rank <= 10 ? 'This is a top-10 common password' : match.rank <= 100 ? 'This is a top-100 common password' : 'This is a very common password' : match.guesses_log10 <= 4 ? 'This is similar to a commonly used password' : void 0 : match.dictionary_name === 'english_wikipedia' ? is_sole_match ? 'A word by itself is easy to guess' : void 0 : (ref = match.dictionary_name) === 'surnames' || ref === 'male_names' || ref === 'female_names' ? is_sole_match ? 'Names and surnames by themselves are easy to guess' : 'Common names and surnames are easy to guess' : '';\n    suggestions = [];\n    word = match.token;\n    if (word.match(scoring.START_UPPER)) {\n      suggestions.push(\"Capitalization doesn't help very much\");\n    } else if (word.match(scoring.ALL_UPPER) && word.toLowerCase() !== word) {\n      suggestions.push(\"All-uppercase is almost as easy to guess as all-lowercase\");\n    }\n    if (match.reversed && match.token.length >= 4) {\n      suggestions.push(\"Reversed words aren't much harder to guess\");\n    }\n    if (match.l33t) {\n      suggestions.push(\"Predictable substitutions like '@' instead of 'a' don't help very much\");\n    }\n    result = {\n      warning: warning,\n      suggestions: suggestions\n    };\n    return result;\n  }\n};\n\nmodule.exports = feedback;\n\n//# sourceMappingURL=feedback.js.map\n"],"sourceRoot":""}